//reset
* {
    box-sizing: border-box;

    outline:  none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}

a {
    color: #999;
}


//Define colors
$colors: (
    "primary": #db9e3f,
    "white" :#fff,  //the key of color is same as the color name, so need to add ""
    "light": #f9f9f9,
    "grey": #999,
    "lightdark": #343440,
    "dark": #222,
    "black": #000
);

@each $colorKey, $color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}


//text align
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}


//font size
$base-font-size: 1rem;
$font-sizes: (
    xs: .769231, //10px
    sm: .923077, //12px
    md: 1,   //13px
    lg: 1.076923, //14px
    xl: 1.230769,  //16px
);

@each $sizeKey, $size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}


//flex -> Principal axis and cross axis, not just horizontal and vertical
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.flex-grow-1 {
    flex-grow: 1;
}

//same as
// .flex-1 {
//     flex: 1;
// }

$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
);

@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch,
);

@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}


//bootstrap
//.mt-1 -> margin top 1 level   
//.pb-2 -> padding bottom 2 level
//0 ~ 5 -> 0:0, 1:0.25, 2:0.5, 3:1, 4:1.5, 5:3 

//margin padding
//top bottom left right
//horizontal -> left right
//vertical -> top bottom

//category
//with direction -> mt-1
//without direction -> m-1



//spacing
$base-spacing-size: 1rem;

$spacing-types: (
    m: margin,
    p: padding
);

$spacing-directions: (
    t: top,
    r: right,
    b: bottom,
    l: left
);

$spacing-sizes: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3
);


@each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
        //.m-1 -> margin: 0.25rem
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $base-spacing-size;
        }

        //.mx-1 -> margin-left: 0.25rem; margin-right: 0.25rem
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $base-spacing-size;
            #{$type}-right: $size * $base-spacing-size;
        }

        //.my-1 -> margin-top: 0.25rem; margin-bottom: 0.25rem
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $base-spacing-size;
            #{$type}-bottom: $size * $base-spacing-size;
        }            
    }

    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
            //.mt-1 -> margin-top: 0.25rem
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $base-spacing-size;
            }         
        }
    }
}